// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechChallenge1.Infrastructure.Repository;

#nullable disable

namespace TechChallenge1.Infrastructure.Migrations
{
    [DbContext(typeof(PostgreContext))]
    [Migration("20240501184445_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechChallenge1.Core.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("StateId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Contact", "TechChallenge1");
                });

            modelBuilder.Entity("TechChallenge1.Core.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("State", "TechChallenge1");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Name = "11 - São Paulo"
                        },
                        new
                        {
                            Id = 21,
                            Name = "21 - Rio de Janeiro"
                        },
                        new
                        {
                            Id = 22,
                            Name = "27 - Vitória"
                        },
                        new
                        {
                            Id = 31,
                            Name = "31 - Belo Horizonte"
                        },
                        new
                        {
                            Id = 41,
                            Name = "41 - Curitiba"
                        },
                        new
                        {
                            Id = 48,
                            Name = "48 - Florianópolis"
                        },
                        new
                        {
                            Id = 51,
                            Name = "51 - Porto Alegre"
                        },
                        new
                        {
                            Id = 61,
                            Name = "61 - Brasília"
                        },
                        new
                        {
                            Id = 62,
                            Name = "62 - Goiânia"
                        },
                        new
                        {
                            Id = 63,
                            Name = "63 - Palmas"
                        },
                        new
                        {
                            Id = 65,
                            Name = "65 - Cuiabá"
                        },
                        new
                        {
                            Id = 67,
                            Name = "67 - Campo Grande"
                        },
                        new
                        {
                            Id = 68,
                            Name = "68 - Rio Branco"
                        },
                        new
                        {
                            Id = 69,
                            Name = "69 - Porto Velho"
                        },
                        new
                        {
                            Id = 71,
                            Name = "71 - Salvador"
                        },
                        new
                        {
                            Id = 79,
                            Name = "79 - Aracaju"
                        },
                        new
                        {
                            Id = 81,
                            Name = "81 - Recife"
                        },
                        new
                        {
                            Id = 82,
                            Name = "82 - Maceió"
                        },
                        new
                        {
                            Id = 83,
                            Name = "83 - João Pessoa"
                        },
                        new
                        {
                            Id = 84,
                            Name = "84 - Natal"
                        },
                        new
                        {
                            Id = 85,
                            Name = "85 - Fortaleza"
                        },
                        new
                        {
                            Id = 86,
                            Name = "86 - Teresina"
                        },
                        new
                        {
                            Id = 91,
                            Name = "91 - Belém"
                        },
                        new
                        {
                            Id = 92,
                            Name = "92 - Manaus"
                        },
                        new
                        {
                            Id = 95,
                            Name = "95 - Boa Vista"
                        },
                        new
                        {
                            Id = 96,
                            Name = "96 - Macapá"
                        },
                        new
                        {
                            Id = 98,
                            Name = "98 - São Luís"
                        });
                });

            modelBuilder.Entity("TechChallenge1.Core.Models.Contact", b =>
                {
                    b.HasOne("TechChallenge1.Core.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });
#pragma warning restore 612, 618
        }
    }
}
